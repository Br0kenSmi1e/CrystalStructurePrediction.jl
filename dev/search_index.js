var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = CrystalStructurePrediction","category":"page"},{"location":"#CrystalStructurePrediction","page":"Home","title":"CrystalStructurePrediction","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for CrystalStructurePrediction.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [CrystalStructurePrediction]","category":"page"},{"location":"#CrystalStructurePrediction.Ion","page":"Home","title":"CrystalStructurePrediction.Ion","text":"Ion{D, T}\nIon(species::Symbol, charge::Int, radii::Float64, frac_pos)\n\nAn ion is a species with a charge, a radius, and a fractional position. D is the dimension of the space, and T is the type of the coordinates.\n\nFields\n\nspecies::Symbol: The species of the ion.\ncharge::Int: The charge of the ion.\nradii::Float64: The radius of the ion.\nfrac_pos::SVector{D, T}: The fractional position of the ion.\n\nExamples\n\nTo define an ion with species \"O\", charge -2, radius 1.35, and fractional position [0.25, 0.25, 0.25], run\n\njulia> Ion(:O, -2, 1.35, [0.25, 0.25, 0.25])\nIon{3, Float64}(:O, -2, 1.35, [0.25, 0.25, 0.25])\n\n\n\n\n\n","category":"type"},{"location":"#CrystalStructurePrediction.Lattice","page":"Home","title":"CrystalStructurePrediction.Lattice","text":"Lattice{D, T, L}\nLattice(vectors::AbstractMatrix{T}, pbc::NTuple{D, Bool}) where {D, T}\n\nA lattice is a set of vectors that define the unit cell of a crystal.\n\nFields\n\nvectors::SMatrix{D, D, T, L}: The vectors that define the unit cell of a crystal.\npbc::NTuple{D, Bool}: The periodic boundary conditions.\n\n\n\n\n\n","category":"type"},{"location":"#CrystalStructurePrediction.build_ion_list-Union{Tuple{N}, Tuple{NTuple{N, Int64}, AbstractVector{Symbol}, AbstractVector{Int64}, AbstractVector{Float64}}} where N","page":"Home","title":"CrystalStructurePrediction.build_ion_list","text":"return a list of ions in the format of: [ion(t1, p1), ion(t1, p2), ..., ion(t1,pn), ion(t2, p1), ..., ion(tm, pn)]\n\n\n\n\n\n","category":"method"},{"location":"#CrystalStructurePrediction.build_quadratic_problem-Union{Tuple{T}, Tuple{N}, Tuple{NTuple{N, Int64}, AbstractVector{Int64}, AbstractMatrix{T}, Any}} where {N, T<:Real}","page":"Home","title":"CrystalStructurePrediction.build_quadratic_problem","text":"build_quadratic_problem(\n    grid_size::NTuple{N, Int},\n    population_list::AbstractVector{Int},\n    interaction_matrix::AbstractMatrix{T},\n    optimizer\n    ) where {N, T<:Real}\n\nBuild a quadratic problem for crystal structure prediction.\n\nArguments\n\ngrid_size::NTuple{N, Int}: The size of the grid.\npopulation_list::AbstractVector{Int}: The number of atoms of each species.\ninteraction_matrix::AbstractMatrix{T}: The interaction matrix.\noptimizer: The optimizer.\n\n\n\n\n\n","category":"method"},{"location":"#CrystalStructurePrediction.real_space_sum-Union{Tuple{T}, Tuple{D}, Tuple{Ion{D, T}, Ion{D, T}, Lattice{D, T}, T, NTuple{D, Int64}}} where {D, T}","page":"Home","title":"CrystalStructurePrediction.real_space_sum","text":"real_space_sum(depth, frac_pos_a, frac_pos_b, lattice, alpha)\n\nCompute the real space part of Ewald summation.\n\nArgument:     lattice::AbstractMatrix: in the form [a, b, c], where a, b, c are column vectors.\n\n\n\n\n\n","category":"method"},{"location":"#CrystalStructurePrediction.summation-Union{Tuple{FT}, Tuple{N}, Tuple{NTuple{N, Int64}, FT}} where {N, FT<:Function}","page":"Home","title":"CrystalStructurePrediction.summation","text":"summation(depth, interaction)\n\nCompute periodic summation of interaction to given depth.\n\nArgument:     depth::AbstractVector{Int}: summation depth on the dimensions.     interaction<:Function: the interaction energy, given the shift as a list of integer.\n\n\n\n\n\n","category":"method"}]
}
